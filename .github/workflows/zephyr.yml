# This is a basic workflow to help you get started with Actions

name: zephyr

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  [push, pull_request, workflow_dispatch]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Prepare cache timestamp
          id: cache-timestamp
          shell: cmake -P {0}
          run: |
            string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
            message("::set-output name=timestamp::${current_date}")

      - name: Install prerequisites
        run: |
          sudo apt install -y --no-install-recommends git cmake ninja-build gperf \
            ccache dfu-util device-tree-compiler wget \
            python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
            make gcc gcc-multilib g++-multilib libsdl2-dev \
            cmake
          pip3 install --user -U west

      - name: Cache for ccache
        id: cache-zephyr-ccache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: zephyr-ccache-${{ steps.cache-timestamp.outputs.timestamp }}
          restore-keys: |
            zephyr-ccache-

      - name: Cache for zephyr SDK
        id: cache-zephyr-sdk-0_11_4
        uses: actions/cache@v2
        with:
          path: ~/zephyr-sdk-0.11.4
          key: zephyr-sdk-0_11_4

      - name: Install toolchain
        if: steps.cache-zephyr-sdk-0_11_4.outputs.cache-hit != 'true'
        run: |
          wget "https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.11.4/zephyr-sdk-0.11.4-setup.run"
          chmod +x zephyr-sdk-0.11.4-setup.run
          ./zephyr-sdk-0.11.4-setup.run -- -d ~/zephyr-sdk-0.11.4

      - name: Build CC1352 firmware
        run: |
          export PATH=~/.local/bin:"$PATH"
          export ZEPHYR_TOOLCHAIN_VARIANT=zephyr
          export ZEPHYR_SDK_INSTALL_DIR=~/zephyr-sdk-0.11.4
          export USE_CCACHE=1
          cd sw/zephyrproject/zephyr
          west update
          west zephyr-export
          pip3 install --user -r scripts/requirements.txt
          BOARD=cc1352r1_launchxl west build samples/subsys/greybus/net --pristine \
            --build-dir build/greybus_launchpad -- -DCONF_FILE="prj.conf overlay-802154.conf"
          BOARD=cc1352r_sensortag west build samples/subsys/greybus/net --pristine \
            --build-dir build/greybus_sensortag -- -DCONF_FILE="prj.conf overlay-802154.conf"

      - uses: actions/upload-artifact@v2
        with:
          name: zephyr
          path: |
            sw/zephyrproject/zephyr/build/greybus_launchpad
            sw/zephyrproject/zephyr/build/greybus_sensortag

